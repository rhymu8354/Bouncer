<Window x:Class="Bouncer.Wpf.View.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Bouncer.Wpf.View"
        mc:Ignorable="d"
        Title="Bouncer" Height="800" Width="1600"
        Closed="OnClosed">
    <Window.CommandBindings>
        <CommandBinding Command="local:Commands.Configure" Executed="OnConfigure" />
        <CommandBinding Command="local:Commands.Exit" Executed="OnExit" />
        <CommandBinding Command="local:Commands.Ban" Executed="OnBan" />
        <CommandBinding Command="local:Commands.EditNote" Executed="OnEditNote" />
        <CommandBinding Command="local:Commands.MarkBot" Executed="OnMarkBot" />
        <CommandBinding Command="local:Commands.MarkNotBot" Executed="OnMarkNotBot" />
        <CommandBinding Command="local:Commands.MarkPossibleBot" Executed="OnMarkPossibleBot" />
        <CommandBinding Command="local:Commands.StartWatching" Executed="OnStartWatching" />
        <CommandBinding Command="local:Commands.StopWatching" Executed="OnStopWatching" />
        <CommandBinding Command="local:Commands.TimeOut" Executed="OnTimeOut" />
        <CommandBinding Command="local:Commands.Unban" Executed="OnUnban" />
        <CommandBinding Command="local:Commands.Unwhitelist" Executed="OnUnwhitelist" />
        <CommandBinding Command="local:Commands.Whitelist" Executed="OnWhitelist" />
    </Window.CommandBindings>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto" />
            <RowDefinition Height="auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <Menu Grid.Row="0">
            <MenuItem Header="_App">
                <MenuItem Header="_Configuration" Command="local:Commands.Configure" />
                <Separator />
                <MenuItem Header="E_xit" ToolTip="Close the Application" Command="local:Commands.Exit" InputGestureText="Alt+F4" />
            </MenuItem>
            <MenuItem Header="_Channel">
                <MenuItem Header="_View Timer" IsCheckable="True" IsChecked="{Binding ViewTimerRunning}" />
            </MenuItem>
            <MenuItem Header="_Viewers">
                <MenuItem Header="Show _All Viewers" IsCheckable="True" IsChecked="{Binding ShowAllViewers}" />
                <Separator />
                <MenuItem Header="Show Known _Bots" IsCheckable="True" IsChecked="{Binding ShowKnownBotViewers}" />
                <MenuItem Header="Show Possible Bots" IsCheckable="True" IsChecked="{Binding ShowPossibleBotViewers}" />
                <MenuItem Header="Show Non-Bots" IsCheckable="True" IsChecked="{Binding ShowNonBotViewers}" />
                <Separator />
                <MenuItem Header="Show Ba_nned Viewers" IsCheckable="True" IsChecked="{Binding ShowBannedViewers}" />
                <MenuItem Header="Show _Timed-Out Viewers" IsCheckable="True" IsChecked="{Binding ShowTimedOutViewers}" />
                <MenuItem Header="Show Non-Timed-Out Viewers" IsCheckable="True" IsChecked="{Binding ShowNonTimedOutViewers}" />
                <Separator />
                <MenuItem Header="Show _Moderators" IsCheckable="True" IsChecked="{Binding ShowModViewers}" />
                <MenuItem Header="Show _VIPs" IsCheckable="True" IsChecked="{Binding ShowVipViewers}" />
                <MenuItem Header="Show _Plebs" IsCheckable="True" IsChecked="{Binding ShowPlebViewers}" />
                <MenuItem Header="Show _Unknown Viewers" IsCheckable="True" IsChecked="{Binding ShowUnknownViewers}" />
                <Separator />
                <MenuItem Header="Show Current Viewers" IsCheckable="True" IsChecked="{Binding ShowCurrentViewers}" />
                <MenuItem Header="Show Missing Viewers" IsCheckable="True" IsChecked="{Binding ShowMissingViewers}" />
                <MenuItem Header="Show _Lurkers" IsCheckable="True" IsChecked="{Binding ShowLurkingViewers}" />
                <MenuItem Header="Show _Chatters" IsCheckable="True" IsChecked="{Binding ShowChattingViewers}" />
                <MenuItem Header="Show _Recent Chatters" IsCheckable="True" IsChecked="{Binding ShowRecentlyChattingViewers}" />
                <Separator />
                <MenuItem Header="Show _Whitelisted Viewers" IsCheckable="True" IsChecked="{Binding ShowWhitelistedViewers}" />
                <MenuItem Header="Show Non-Whitelisted Viewers" IsCheckable="True" IsChecked="{Binding ShowNonWhitelistedViewers}" />
                <Separator />
                <MenuItem Header="Show Watched Viewers" IsCheckable="True" IsChecked="{Binding ShowWatchedViewers}" />
                <MenuItem Header="Show Unwatched Viewers" IsCheckable="True" IsChecked="{Binding ShowUnwatchedViewers}" />
                <Separator />
                <MenuItem Header="Show Old Accounts" IsCheckable="True" IsChecked="{Binding ShowOldAccounts}" />
                <MenuItem Header="Show New Accounts" IsCheckable="True" IsChecked="{Binding ShowNewAccounts}" />
            </MenuItem>
        </Menu>
        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="auto" />
                <RowDefinition Height="auto" />
            </Grid.RowDefinitions>
            <Label Grid.Row="0" Grid.Column="0" HorizontalAlignment="Right" Content="Time:" Padding="5,0" />
            <Label Content="{Binding TimeReport}" Grid.Row="0" Grid.Column="1" VerticalAlignment="Center" Padding="5,0" />
            <Label Grid.Row="1" Grid.Column="0" HorizontalAlignment="Right" Content="Viewers:" Padding="5,0" />
            <Label Content="{Binding ViewersReport}" Grid.Row="1" Grid.Column="1" VerticalAlignment="Center" Padding="5,0" />
        </Grid>
        <ListView
            x:Name="UsersList"
            Grid.Row="2"
            ItemsSource="{Binding Users}"
            SelectedItem="{Binding SelectedUser}"
        >
            <ListView.Resources>
                <ContextMenu
                    x:Key="ItemContextMenu"
                    DataContext="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource Self}}"
                >
                    <MenuItem Header="{Binding TimeOutMenuItemHeader}">
                        <MenuItem.Style>
                            <Style TargetType="{x:Type MenuItem}">
                                <Setter Property="Visibility" Value="{Binding TimeOutMenuItemVisibility}" />
                            </Style>
                        </MenuItem.Style>
                        <MenuItem Header="{Binding TimeOut1sMenuItemHeader}" Command="local:Commands.TimeOut" CommandParameter="{Binding Timeout1s}" />
                        <MenuItem Header="{Binding TimeOut1mMenuItemHeader}" Command="local:Commands.TimeOut" CommandParameter="{Binding Timeout1m}" />
                        <MenuItem Header="{Binding TimeOut10mMenuItemHeader}" Command="local:Commands.TimeOut" CommandParameter="{Binding Timeout10m}" />
                        <MenuItem Header="{Binding TimeOut1hMenuItemHeader}" Command="local:Commands.TimeOut" CommandParameter="{Binding Timeout1h}" />
                        <MenuItem Header="{Binding TimeOut6hMenuItemHeader}" Command="local:Commands.TimeOut" CommandParameter="{Binding Timeout6h}" />
                        <MenuItem Header="{Binding TimeOut1dMenuItemHeader}" Command="local:Commands.TimeOut" CommandParameter="{Binding Timeout1d}" />
                    </MenuItem>
                    <MenuItem Header="{Binding BanMenuItemHeader}" Command="local:Commands.Ban" CommandParameter="{Binding}">
                        <MenuItem.Style>
                            <Style TargetType="{x:Type MenuItem}">
                                <Setter Property="Visibility" Value="{Binding BanMenuItemVisibility}" />
                            </Style>
                        </MenuItem.Style>
                    </MenuItem>
                    <MenuItem Header="{Binding UnbanMenuItemHeader}" Command="local:Commands.Unban" CommandParameter="{Binding}">
                        <MenuItem.Style>
                            <Style TargetType="{x:Type MenuItem}">
                                <Setter Property="Visibility" Value="{Binding UnbanMenuItemVisibility}" />
                            </Style>
                        </MenuItem.Style>
                    </MenuItem>
                    <Separator />
                    <MenuItem Header="{Binding WhitelistMenuItemHeader}" Command="local:Commands.Whitelist" CommandParameter="{Binding}">
                        <MenuItem.Style>
                            <Style TargetType="{x:Type MenuItem}">
                                <Setter Property="Visibility" Value="{Binding WhitelistMenuItemVisibility}" />
                            </Style>
                        </MenuItem.Style>
                    </MenuItem>
                    <MenuItem Header="{Binding UnwhitelistMenuItemHeader}" Command="local:Commands.Unwhitelist" CommandParameter="{Binding}">
                        <MenuItem.Style>
                            <Style TargetType="{x:Type MenuItem}">
                                <Setter Property="Visibility" Value="{Binding UnwhitelistMenuItemVisibility}" />
                            </Style>
                        </MenuItem.Style>
                    </MenuItem>
                    <Separator />
                    <MenuItem Header="{Binding StartWatchingMenuItemHeader}" Command="local:Commands.StartWatching" CommandParameter="{Binding}">
                        <MenuItem.Style>
                            <Style TargetType="{x:Type MenuItem}">
                                <Setter Property="Visibility" Value="{Binding StartWatchingMenuItemVisibility}" />
                            </Style>
                        </MenuItem.Style>
                    </MenuItem>
                    <MenuItem Header="{Binding StopWatchingMenuItemHeader}" Command="local:Commands.StopWatching" CommandParameter="{Binding}">
                        <MenuItem.Style>
                            <Style TargetType="{x:Type MenuItem}">
                                <Setter Property="Visibility" Value="{Binding StopWatchingMenuItemVisibility}" />
                            </Style>
                        </MenuItem.Style>
                    </MenuItem>
                    <Separator />
                    <MenuItem Header="{Binding MarkBotMenuItemHeader}" Command="local:Commands.MarkBot" CommandParameter="{Binding}">
                        <MenuItem.Style>
                            <Style TargetType="{x:Type MenuItem}">
                                <Setter Property="Visibility" Value="{Binding MarkBotMenuItemVisibility}" />
                            </Style>
                        </MenuItem.Style>
                    </MenuItem>
                    <MenuItem Header="{Binding MarkNotBotMenuItemHeader}" Command="local:Commands.MarkNotBot" CommandParameter="{Binding}">
                        <MenuItem.Style>
                            <Style TargetType="{x:Type MenuItem}">
                                <Setter Property="Visibility" Value="{Binding MarkNotBotMenuItemVisibility}" />
                            </Style>
                        </MenuItem.Style>
                    </MenuItem>
                    <MenuItem Header="{Binding MarkPossibleBotMenuItemHeader}" Command="local:Commands.MarkPossibleBot" CommandParameter="{Binding}">
                        <MenuItem.Style>
                            <Style TargetType="{x:Type MenuItem}">
                                <Setter Property="Visibility" Value="{Binding MarkPossibleBotMenuItemVisibility}" />
                            </Style>
                        </MenuItem.Style>
                    </MenuItem>
                    <Separator />
                    <MenuItem Header="{Binding EditNoteMenuItemHeader}" Command="local:Commands.EditNote" CommandParameter="{Binding}" />
                </ContextMenu>
            </ListView.Resources>
            <ListView.ItemContainerStyle>
                <Style TargetType="{x:Type ListViewItem}">
                    <Setter Property="ContextMenu" Value="{StaticResource ItemContextMenu}" />
                    <Setter Property="Foreground" Value="{Binding Foreground}" />
                </Style>
            </ListView.ItemContainerStyle>
            <ListView.View>
                <GridView>
                    <GridViewColumn Width="28">
                        <GridViewColumn.Header>
                            <GridViewColumnHeader Click="OnSortUsers" Tag="NeedsGreeting">Hi</GridViewColumnHeader>
                        </GridViewColumn.Header>
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <Image Source="{Binding NeedsGreetingImage}" Height="16" />
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    <GridViewColumn DisplayMemberBinding="{Binding Id}">
                        <GridViewColumn.Header>
                            <GridViewColumnHeader Click="OnSortUsers" Tag="Id">ID</GridViewColumnHeader>
                        </GridViewColumn.Header>
                    </GridViewColumn>
                    <GridViewColumn DisplayMemberBinding="{Binding Login}">
                        <GridViewColumn.Header>
                            <GridViewColumnHeader Click="OnSortUsers" Tag="Login">Login</GridViewColumnHeader>
                        </GridViewColumn.Header>
                    </GridViewColumn>
                    <GridViewColumn DisplayMemberBinding="{Binding Name}">
                        <GridViewColumn.Header>
                            <GridViewColumnHeader Click="OnSortUsers" Tag="Name">Name</GridViewColumnHeader>
                        </GridViewColumn.Header>
                    </GridViewColumn>
                    <GridViewColumn DisplayMemberBinding="{Binding Role}">
                        <GridViewColumn.Header>
                            <GridViewColumnHeader Click="OnSortUsers" Tag="Role">Role</GridViewColumnHeader>
                        </GridViewColumn.Header>
                    </GridViewColumn>
                    <GridViewColumn DisplayMemberBinding="{Binding CreatedAtFormatted}">
                        <GridViewColumn.Header>
                            <GridViewColumnHeader Click="OnSortUsers" Tag="CreatedAt">Created At</GridViewColumnHeader>
                        </GridViewColumn.Header>
                    </GridViewColumn>
                    <GridViewColumn DisplayMemberBinding="{Binding TotalViewTimeFormatted}">
                        <GridViewColumn.Header>
                            <GridViewColumnHeader Click="OnSortUsers" Tag="TotalViewTime">View Time</GridViewColumnHeader>
                        </GridViewColumn.Header>
                    </GridViewColumn>
                    <GridViewColumn DisplayMemberBinding="{Binding JoinTimeFormatted}">
                        <GridViewColumn.Header>
                            <GridViewColumnHeader Click="OnSortUsers" Tag="JoinTime">Joined At</GridViewColumnHeader>
                        </GridViewColumn.Header>
                    </GridViewColumn>
                    <GridViewColumn DisplayMemberBinding="{Binding PartTimeFormatted}">
                        <GridViewColumn.Header>
                            <GridViewColumnHeader Click="OnSortUsers" Tag="PartTime">Parted At</GridViewColumnHeader>
                        </GridViewColumn.Header>
                    </GridViewColumn>
                    <GridViewColumn DisplayMemberBinding="{Binding FirstMessageTimeReport}">
                        <GridViewColumn.Header>
                            <GridViewColumnHeader Click="OnSortUsers" Tag="FirstMessageTimeThisInstance">First Message</GridViewColumnHeader>
                        </GridViewColumn.Header>
                    </GridViewColumn>
                    <GridViewColumn DisplayMemberBinding="{Binding LastMessageTimeFormatted}">
                        <GridViewColumn.Header>
                            <GridViewColumnHeader Click="OnSortUsers" Tag="LastMessageTime">Last Message</GridViewColumnHeader>
                        </GridViewColumn.Header>
                    </GridViewColumn>
                    <GridViewColumn DisplayMemberBinding="{Binding NumMessagesReport}">
                        <GridViewColumn.Header>
                            <GridViewColumnHeader Click="OnSortUsers" Tag="NumMessages">Messages</GridViewColumnHeader>
                        </GridViewColumn.Header>
                    </GridViewColumn>
                    <GridViewColumn DisplayMemberBinding="{Binding TimeoutFormatted}">
                        <GridViewColumn.Header>
                            <GridViewColumnHeader Click="OnSortUsers" Tag="Timeout">Timeout</GridViewColumnHeader>
                        </GridViewColumn.Header>
                    </GridViewColumn>
                    <GridViewColumn DisplayMemberBinding="{Binding IsBanned}">
                        <GridViewColumn.Header>
                            <GridViewColumnHeader Click="OnSortUsers" Tag="IsBanned">Banned</GridViewColumnHeader>
                        </GridViewColumn.Header>
                    </GridViewColumn>
                    <GridViewColumn DisplayMemberBinding="{Binding IsWhitelisted}">
                        <GridViewColumn.Header>
                            <GridViewColumnHeader Click="OnSortUsers" Tag="IsWhitelisted">Whitelisted</GridViewColumnHeader>
                        </GridViewColumn.Header>
                    </GridViewColumn>
                    <GridViewColumn DisplayMemberBinding="{Binding IsNewAccount}">
                        <GridViewColumn.Header>
                            <GridViewColumnHeader Click="OnSortUsers" Tag="IsNewAccount">New</GridViewColumnHeader>
                        </GridViewColumn.Header>
                    </GridViewColumn>
                    <GridViewColumn DisplayMemberBinding="{Binding Watching}">
                        <GridViewColumn.Header>
                            <GridViewColumnHeader Click="OnSortUsers" Tag="Watching">Watching</GridViewColumnHeader>
                        </GridViewColumn.Header>
                    </GridViewColumn>
                    <GridViewColumn DisplayMemberBinding="{Binding IsJoined}">
                        <GridViewColumn.Header>
                            <GridViewColumnHeader Click="OnSortUsers" Tag="IsJoined">Joined</GridViewColumnHeader>
                        </GridViewColumn.Header>
                    </GridViewColumn>
                    <GridViewColumn DisplayMemberBinding="{Binding Bot}">
                        <GridViewColumn.Header>
                            <GridViewColumnHeader Click="OnSortUsers" Tag="Bot">Bot</GridViewColumnHeader>
                        </GridViewColumn.Header>
                    </GridViewColumn>
                    <GridViewColumn DisplayMemberBinding="{Binding Note}" >
                        <GridViewColumn.Header>
                            <GridViewColumnHeader Click="OnSortUsers" Tag="Note">Note</GridViewColumnHeader>
                        </GridViewColumn.Header>
                    </GridViewColumn>
                </GridView>
            </ListView.View>
        </ListView>
        <GridSplitter
            Grid.Row="3"
            Height="5"
            Background="{DynamicResource {x:Static SystemColors.ActiveBorderBrushKey}}"
            HorizontalAlignment="Stretch"
            VerticalAlignment="Center"
            IsTabStop="False"
        />
        <ListBox
            Grid.Row="4"
            ItemsSource="{Binding Messages}"
            SelectedItem="{Binding SelectedMessage}"
            Grid.IsSharedSizeScope="True"
            local:ListBoxExtensions.AutoScroll="True"
            SelectionChanged="OnMessagesSelectionChanged"
        >
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto" SharedSizeGroup="Level" />
                            <ColumnDefinition Width="10" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <TextBlock Grid.Column="0" Text="{Binding Level}" />
                        <TextBlock Grid.Column="2" Text="{Binding Content}" />
                    </Grid>
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>
    </Grid>
</Window>
